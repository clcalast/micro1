server.port=8013
spring.application.name=gateway

openam.realm = forcns
spring.security.oauth2.client.registration.FIRENZE.client-id = QfHwYtL5adGUDibnyv736faUfKQa
spring.security.oauth2.client.registration.FIRENZE.client-secret = Jkkx6JZFhZNQ08WwGMW1EnUQ7UEa
spring.security.oauth2.client.registration.FIRENZE.scope = openid
spring.security.oauth2.client.registration.FIRENZE.authorization-grant-type = authorization_code
#spring.security.oauth2.client.registration.FIRENZE.redirect-uri =  http://localhost:8013/oauth2/authorization/{registrationId}
spring.security.oauth2.client.registration.FIRENZE.redirect-uri =  http://localhost:8013/oauth
spring.security.oauth2.client.provider.FIRENZE.authorization-uri = https://id-staging.055055.it:9443/oauth2/authorize?realm=${openam.realm}&isAuthSilfi=yes
#spring.security.oauth2.client.provider.FIRENZE.token-uri = http://localhost:8013/idpoauth2/token
#spring.security.oauth2.client.provider.FIRENZE.user-info-uri = http://localhost:8013/idpoauth2/userinfo
spring.security.oauth2.client.provider.FIRENZE.token-uri = https://id-staging.055055.it:9443/oauth2/token
spring.security.oauth2.client.provider.FIRENZE.user-info-uri = https://id-staging.055055.it:9443/oauth2/userinfo
spring.security.oauth2.client.provider.FIRENZE.user-name-attribute = openid,cn,family_name,given_name,email,mobile
#spring.main.web-application-type=reactive
#url pagina angular auth-token (con token)
url.angular.page.redirect.success = http://localhost:4200/auth-token?token=%s
#url pagina angular accessdenied
url.angular.page.redirect.accessdenied = /accessdenied
logging.level.org.springframework.security=DEBUG
#indica se usare autenticazione  #Autenticazione
security.authentication.enabled = false

#url permessi
security.authentication.arrayOfPermitAll = /accessdenied,/auth-token**,/**.js,/**.map,/**.css,/config,/enteundefined,/internalerror,/favicon.ico,/assets/**,/static/**,/sessione-terminata,/getConfLogout
#url autenticati
security.authentication.arrayOfAuthenticated =
security.path.token.check.enabled = false
#Path controllo token
security.path.token = /controller/*
#cookie https
security.onlyhttps.cookie = false

#token jwt
security.jwt.secret = S1Lf1
security.jwt.secret.utente = uteS1Lf1


spring.cloud.gateway.routes[0].id=book-service-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[0].uri=http://localhost:8014/
#spring.cloud.gateway.routes[0].uri=lb://BOOK-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/book-service/**

spring.cloud.gateway.routes[1].id=order-service-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[1].uri=http://localhost:8015/
#spring.cloud.gateway.routes[1].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/order-service/**


spring.cloud.gateway.routes[2].id=order-service-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[2].uri=http://localhost:8016/
#spring.cloud.gateway.routes[2].uri=lb://AGGREGATOR-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/aggregator-service/**

spring.cloud.gateway.routes[3].id=gradimento-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[3].uri=http://localhost:8015/
#spring.cloud.gateway.routes[3].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/gradimento/**
spring.cloud.gateway.routes[3].filters=StripPrefix=1


spring.cloud.gateway.routes[4].id=old-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[4].uri=http://localhost:8080/controller/
#spring.cloud.gateway.routes[4].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/controller/**

#spring.cloud.gateway.routes[5].id=idp-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
#spring.cloud.gateway.routes[5].uri=https://id-staging.055055.it:9443/oauth2/
#spring.cloud.gateway.routes[5].uri=lb://ORDER-SERVICE
#spring.cloud.gateway.routes[5].predicates[0]=Path=/ipdoauth2/**

spring.cloud.gateway.routes[5].id=resource-route
#Anziché usare l'ip possiamo utilizzare il nome di libreria
spring.cloud.gateway.routes[5].uri=http://localhost:8080/
#spring.cloud.gateway.routes[5].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/secure/**


#Non siamo riusciti a far funzionare il RewritePath
#spring.cloud.gateway.routes[0].filters.RewritePath=/book-service,/
